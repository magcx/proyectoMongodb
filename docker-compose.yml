services:
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.11.1
    container_name: elasticsearch
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false
      - node.name=snowstorm
      - cluster.name=snowstorm-cluster
      - "ES_JAVA_OPTS=-Xms4g -Xmx4g"
    volumes:
      - elastic:/usr/share/elasticsearch/data
    networks:
      elastic:
        aliases:
         - es
    healthcheck:
      test: ["CMD", "curl", "-f", "http://es:9200"]
      interval: 1s
      timeout: 1s
      retries: 60
    ports:
      - 127.0.0.1:9200:9200
    mem_reservation: 4g


  snowstorm:
    image: snomedinternational/snowstorm:latest
    container_name: snowstorm
    restart: always
    depends_on:
      elasticsearch:
        condition: service_healthy
    entrypoint: java -Xms2g -Xmx4g --add-opens java.base/java.lang=ALL-UNNAMED --add-opens=java.base/java.util=ALL-UNNAMED -cp @/app/jib-classpath-file org.snomed.snowstorm.SnowstormApplication --elasticsearch.urls=http://es:9200
    networks:
      elastic:
        aliases:
         - snowstorm
    ports:
      - 8080:8080

  browser:
    image: snomedinternational/snomedct-browser:latest
    container_name: browser
    depends_on:
      - snowstorm
    links:
      - snowstorm:snowstorm
    networks:
      - elastic
    environment:
      - API_HOST=http://snowstorm:8080/
    ports:
      - 80:80
    restart: always

  postgres:
    image: postgres:17
    container_name: auth_api_springboot
    ports:
      - "5433:5432"
    environment:
      POSTGRES_USER: vault_user
      POSTGRES_PASSWORD: Chuck1234
      POSTGRES_DB: vault
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - vault
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U vault_user -d vault" ]
      interval: 5s
      timeout: 5s
      retries: 10

  vault:
    depends_on:
      postgres:
        condition: service_healthy
    image: hashicorp/vault:latest
    container_name: vault-address-service
    restart: always
    ports:
      - "8200:8200"
    environment:
      VAULT_ADDR: "http://0.0.0.0:8200"
    volumes:
      - ./vault.hcl:/vault.hcl
      - ./vault-data:/vault/data
    cap_add:
      - IPC_LOCK
    command: "vault server -config=/vault.hcl"
    networks:
      - vault

networks:
  elastic:
  vault:

volumes:
  elastic:
  postgres_data: